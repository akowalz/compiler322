#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 2653 0 24 3 1 #" "
0 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"generate-spilled-program"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 15 3 20 #"call-with-input-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"read"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"read"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"read"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"read"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"var"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"addr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"prefix"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 17 #"spill-program-int"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"spill-program-int"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 2 #") "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 9 #"new-count"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aSpill-count"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 11 #"result-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 11 #"result-expr"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 17 #"spill-program-int"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 6 #"instrs"
0 0 24 3 2 #") "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-count"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #") ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 2 #") "
0 0 14 3 5 #"count"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 2 #") "
0 0 14 3 5 #"count"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"n"
0 0 24 3 4 #")) ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"          ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 43 #"\"(~A <- (mem ~A ~A))\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                  "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"    [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 43 #"\"(~A <- (mem ~A ~A))\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"    [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"(~A <- (mem ~A ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 6 #")])) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"          ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"((mem ~A ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                  "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"    [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"((mem ~A ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 4 #"dest"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"    [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"((mem ~A ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 6 #")])) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 4 #")) ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"(eax <- (print ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"   "
) 0 0 14 3 4 #"temp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 7 #"runtime"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t2"
0 0 24 3 4 #")) ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 72
(
 #"                                                                    "
 #"   ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"(eax <- (~A \""
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"           "
) 0 0 14 3 7 #"runtime"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 72
(
 #"                                                                    "
 #"   ("
) 0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"~A ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 101
(
 #"                                                                    "
 #"                                 "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"         [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"~A ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 102
(
 #"                                                                    "
 #"                                  "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"         [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"~A ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 102
(
 #"                                                                    "
 #"                                  "
) 0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"(~A <- ~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 70
(
 #"                                                                    "
 #" ("
) 0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"(~A <- ~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"                "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"       [("
) 0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"(~A <- ~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"                "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"       [("
) 0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 2 #"cx"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"(~A <- ~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"                "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"       [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"(~A <- ~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"                "
) 0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"       [("
) 0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"        ("
) 0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"(~A <- ~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"                "
) 0 0 14 3 2 #"cx"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cop"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"aSpill"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 14 3 5 #"count"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"(~A <- (mem ebp ~A))\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 14 3 5 #"count"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 6 #"aSpill"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"(~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                        [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"(~A ~A ~A)\\n((mem ebp ~A) <- ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                        [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"(~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 6 #")])) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"cjump"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"cmp"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l2"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 6 #"aSpill"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"(cjump ~A ~A ~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"   "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                              [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"(cjump ~A ~A ~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"   "
) 0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmp"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                              [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"(cjump ~A ~A ~A ~A ~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"   "
) 0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 6 #")])) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"error\""
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"thing->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"lst"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"(~A)\""
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 13 #"thing->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 14 3 6 #"offset"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"ebp"
0 0 24 3 1 #" "
0 0 14 3 6 #"offset"
0 0 24 3 4 #"))) "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"put-in-temp"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"x0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 2 #") "
0 0 19 3 24 #"\"(x0 <- (mem ebp -4))\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 13 #"thing->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"thing->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"includes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"sym"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"includes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"sym"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"includes"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 19 3 9 #"\"(a b c)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 14 3 3 #"ebp"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 2 #") "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 3 #"eax"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 23 #"\"((mem ebp -4) <- eax)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Basic arrows"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 21 #"\"((mem ebp -4) <- 5)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 10 #"\"(a <- 5)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 23 #"\"(eax <- (mem ebp -4))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";(check-equal? (aSpill-expr (spill-exprs '((a <- 5)) 'a -4 's))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 23 #";\"((mem ebp -4) <- 5)\")"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";Mem arrows"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 14 3 3 #"ebp"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 43 #"\"(s0 <- (mem ebp -4))\\n((mem ebp 8) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 42 #"\"(s0 <- (mem ebp -4))\\n((mem s0 8) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 43 #"\"(s0 <- (mem ebp -4))\\n(eax <- (mem s0 8))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mem"
0 0 24 3 1 #" "
0 0 14 3 3 #"ebp"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 65
(
 #"\"(s0 <- (mem ebp -4))\\n(s0 <- (m"
 #"em ebp 8))\\n((mem ebp -4) <- s0)\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; Ops"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"+="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 56
#"\"(s0 <- (mem ebp -4))\\n(s0 += s0)\\n((mem ebp -4) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";t cmp t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 39 #"\"(s0 <- (mem ebp -4))\\n(eax <- s0 < 4)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"*="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 33 #"\"(s1 <- (mem ebp -4))\\n(v *= s1)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #">>="
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 11 #"\"(v >>= e)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 37 #"\"(s0 <- 5 < 4)\\n((mem ebp -4) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 60
#"\"(s0 <- (mem ebp -4))\\n(s0 <- s0 < 4)\\n((mem ebp -4) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 61
#"\"(t0 <- (mem ebp -4))\\n(t0 <- t0 < t0)\\n((mem ebp -4) <- t0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"*="
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 55
#"\"(s0 <- (mem ebp -4))\\n(s0 *= 4)\\n((mem ebp -4) <- s0)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";cjumps "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"cjump"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 5 #":here"
0 0 24 3 1 #" "
0 0 14 3 6 #":there"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 51 #"\"(x0 <- (mem ebp -4))\\n(cjump x0 = 4 :here :there)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"cjump"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #":here"
0 0 24 3 1 #" "
0 0 14 3 6 #":there"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 52 #"\"(x0 <- (mem ebp -4))\\n(cjump x0 < x0 :here :there)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"cjump"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #":here"
0 0 24 3 1 #" "
0 0 14 3 6 #":there"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 52 #"\"(x0 <- (mem ebp -4))\\n(cjump 4 <= x0 :here :there)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";runtime calls"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";print"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 43 #"\"(s1 <- (mem ebp -8))\\n(eax <- (print s1))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 20 #"\"(eax <- (print x))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";others"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"allocate"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 48 #"\"(s0 <- (mem ebp -4))\\n(eax <- (allocate s0 b))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aSpill-expr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"spill-instr"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"allocate"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 49 #"\"(s0 <- (mem ebp -4))\\n(eax <- (allocate s0 s0))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";spill-program"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 25 #"\"(((mem ebp -4) <- 5)\\n)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"+="
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 80
(
 #"\"(((mem ebp -4) <- 5)\\n(s0 <- (mem ebp -4))\\n(s0 += 7)\\n((mem eb"
 #"p -4) <- s0)\\n)\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"+="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 104
(
 #"\"(((mem ebp -4) <- 1)\\n(s0 <- (mem ebp -4))\\n(s0 += s0)\\n((mem e"
 #"bp -4) <- s0)\\n(eax <- (mem ebp -4))\\n)\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"spill-program"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"+="
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 3 #"eax"
0 0 24 3 1 #" "
0 0 14 3 2 #"<-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 22 #"\"((mem ebp -4) <- 21)\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 11 #"\"(y <- 31)\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 22 #"\"(s0 <- (mem ebp -4))\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 17 #"\"(eax <- s0 = y)\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 22 #"\"(s1 <- (mem ebp -4))\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 12 #"\"(s1 += 10)\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 22 #"\"((mem ebp -4) <- s1)\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 22 #"\"(s2 <- (mem ebp -4))\""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 17 #"\"(eax <- s2 = y)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 19 3 5 #"\"\\n)\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 24 #"generate-spilled-program"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 2 #" ("
0 0 14 3 30 #"current-command-line-arguments"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 24 29 1 #"\n"
0           0
