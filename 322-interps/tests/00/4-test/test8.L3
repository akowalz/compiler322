((let ((comp (< 1 0)))
 (if comp
 (let ((t (new-tuple 3 4)))
   (let ((r (:update 2 t)))
        (print r)))
 (let ((r2 (print 1)))
	(print r2))))
 (:update
  (x results)
  (let ((y (aref results 0)))
        (let ((z (aref results 1)))
          (let ((v1 (+ x y)))
                (let ((v2 (+ x z)))
                        (new-tuple v1 v2)))))))
