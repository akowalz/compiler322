(let ([process-image (lambda (a-image width height)
                       (let ([pixel (lambda (row col)
                                      (let ([row (if (< row height)
                                                     (if (< row 0)
                                                         0
                                                         row)
                                                     (- height 1))])
                                        (let ([col (if (< col width)
                                                       (if (< col 0)
                                                           0
                                                           col)
                                                       (- col 1))])
                                          
                                          (aref a-image (+ (* row width) col)))))])
                         (let ([filtered-pixel (lambda (row col)
                                                 (+ (pixel (- row 1) (- col 1))
                                                    (+ (pixel (- row 1) col)
                                                       (+ (pixel (- row 1) (+ col 1))
                                                          (+ (pixel row (- col 1))
                                                             (+ (pixel row col)
                                                                (+ (pixel row (+ col 1))
                                                                   (+ (pixel (+ row 1) (- col 1))
                                                                      (+ (pixel (+ row 1) col)
                                                                         (pixel (+ row 1) (+ col 1)))))))))))])
                           (letrec ([sum-greater (lambda (sum row col)
                                                   (let ([sum (+ sum (< 1152 (filtered-pixel row col)))])
                                                     (if (< col (- width 1))
                                                         (sum-greater sum row (+ col 1))
                                                         (if (< row (- height 1))
                                                             (sum-greater sum (+ row 1) 0)
                                                             sum))))])
                             (sum-greater 0 0 0)))))])
  (let ([init-image (lambda (image width height max-value) 
                      (letrec ([init-image (lambda (pixel value)
                                             (begin
                                               (aset image pixel value)
                                               (if (< pixel (- (* width height) 1))
                                                   (init-image (+ pixel 1)
                                                               (if (< value max-value)
                                                                   (+ value 1)
                                                                   0))
                                                   0)))])
                        (begin
                          (init-image 0 0)
                          image)))])
    (let ([image (new-array (* 1000 1000) 0)])
      (let ([for-loop (lambda (num-iterations work)
                        (letrec ([the-loop (lambda (counter)
                                             (if (= counter num-iterations)
                                                 0
                                                 (begin
                                                   (work counter)
                                                   (the-loop (+ counter 1)))))])
                          (the-loop 0)))])
        (for-loop 32 (lambda (iteration) (begin
                                           (init-image image 1000 1000 (* iteration 16))
                                           (print (process-image image 1000 1000)))))))))
                                      