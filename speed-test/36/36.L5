(let ((cons (lambda (a b) (new-tuple a b))))
  (letrec ((car (lambda (l) (aref l 0))))
    (let ((cdr (lambda (l) (aref l 1))))
      (letrec ((nil (new-tuple)))
        (let ((ask-null (lambda (l) (= 0 (alen l)))))
                (letrec ((n-lst (lambda (x) (if (< x 999)
                                (cons (car (cons (n-lst (+ 1 x)) x))
                                      (cdr (cons x x)))
                                        1122131))))
(letrec ((loop (lambda (n) (if (= n 0) 1 (begin (n-lst 2) (loop (- n 1)))))))
  (begin (loop 200000)
         (print (n-lst 2))))))))))
